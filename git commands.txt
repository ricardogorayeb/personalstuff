## substitui o commit antigo
git commit --amend

## remove o arquivo do staged
git reset HEAD <arquivo>

## reverte o arquivo para a versão do último commit
git checkout -- <arquivo>

## remove o último commit e deixa as mudanças em staging. Verificar
## com git status
git reset --soft HEAD~1

## remove o último commit e ignora todas as mudanças. Verificar com
## git status
git reset --hard HEAD~1

## cria repositório em um diretorio local
git init --base <dir-server>

## adicionar o repositório local como se fosse remoto no diretorio
## de trabalho e atualiza-lo 
git remove add origin <dir-server>
git push origin master

# entrar no <dir-server>
git log

#altera para a branch <branch>
git switch <branch>

### rebase
inicializar um repo
criar arquivo README com nome do projeto e fazer primeiro commit
criar uma nova branch chamada "feature"
criar um arquivo chamado "feature" com conteúdo "feature legal" e fazer um commit
efetuar checkout da master
na master criar um arquivo "master" com conteúdo "master da hora" e fazer um commit
verificar a árvore com "git log --oneline --graph --all"
efetuar checkout da branch "feature"
efetuar o rebase na master com "git rebase master"
verificar a árvore com "git log --oneline --graph --all"
efetuar checkout da branch "master"
efetuar o fast-forward da master com "git merge feature"
verificar a árvore com "git log --oneline -- graph --all"
verificar os arquivos no projeto com "ls -lha"

### conflito no rebase
inicializar um repo
criar arquivo README com nome do projeto e fazer primeiro commit
criar uma nova branch chamada "feature"
criar um arquivo chamado "arquivo" com conteúdo "feature legal" e fazer um commit
efetuar checkout da master
na master criar um arquivo "arquivo" com conteúdo "master da hora" e fazer um commit
verificar a árvore com "git log --oneline --graph --all"
efetuar checkout da branch "feature"
efetuar o rebase na master com "git rebase master"
resolver o conflito editando o arquivo "arquivo"
marcar o arquivo como resolvido com "git add arquivo"
finalizar o rebase com "git rebase --continue"
verificar a árvore com "git log --oneline --graph --all"
efetuar checkout da branch "master"
efetuar o fast-forward da master com "git merge feature"
verificar a árvore com "git log --oneline -- graph --all"


###rebase interativo
iniciar a partir do repo do exercício anterior
efetuar "git log --oneline --graph --all" para ver os commits
efetuar rebase interativo a partir do primeiro commit com "git rebase --interactive <primeiro commit>"
manter o primeiro commit e efetuar squash (s) do anterior
editar a mensagem do commit mesclado e salvar
verificar o novo commit com "git log"
